name: Build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
  workflow_dispatch:

env:
  main_image: ghcr.io/${{ github.repository }}
  cache_image: ghcr.io/${{ github.repository }}/cache:cache
  EARTHLY_USE_INLINE_CACHE: true
  EARTHLY_SAVE_INLINE_CACHE: true
  EARTHLY_VERBOSE: true
  EARTHLY_FULL_TARGET: true
  EARTHLY_OUTPUT: true

jobs:
  setup:
    name: Set variables
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "Set image version"
        id: constants
        run: |
          export version="$(date +%Y%m%d%H%M%S)-$(git describe --always --dirty --exclude '*')"
          echo "VERSION=${version}" >> ${GITHUB_OUTPUT}
    outputs:
      VERSION: "${{ steps.constants.outputs.VERSION }}"
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      packages: write
      checks: write
      pull-requests: write
    needs: setup
    env:
      VERSION: "${{ needs.setup.outputs.VERSION }}"
    steps:
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3
        with:
          image: tonistiigi/binfmt:latest
          platforms: all
      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Install earthly
        uses: earthly/actions-setup@b61ca413d8100e151c4e517e433a617a402f5051 # ratchet:earthly/actions-setup@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          use-cache: true
      - name: Build and possibly push
        env:
          EARTHLY_PUSH: "${{ github.ref == 'refs/heads/main' }}"
          EARTHLY_TOKEN: ${{ secrets.EARTHLY_TOKEN }}
          EARTHLY_ORG: ${{ secrets.EARTHLY_ORG }}
          EARTHLY_SATELLITE: ${{ secrets.EARTHLY_SATELLITE }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        run: |
          earthly config global.cache_size_pct 50
          earthly "--remote-cache=${cache_image}" +deploy "--main_image=${main_image}" "--VERSION=${VERSION}"
      - name: Save manifests for later deploy
        uses: actions/upload-artifact@v4
        with:
          name: manifests
          path: deploy.yaml
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            xunit.xml
  deploy:
    name: Deploy
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - setup
      - build
    steps:
      - name: Download manifests from build
        uses: actions/download-artifact@v4
        with:
          name: manifests
      - name: Install and configure kubectl
        run: |
          mkdir -p /tmp/kubectl
          cd /tmp/kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
          echo "$(<kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          echo "${{ secrets.KUBECONFIG }}" > /tmp/kubectl/kubeconfig
          echo "KUBECONFIG=/tmp/kubectl/kubeconfig" >> ${GITHUB_ENV}
      - id: join-zt
        name: Join ZeroTier network
        uses: mortenlj/zerotier-actions/join-zt@main
        with:
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}
          ping_target: k3s.home.ibidem.no
      - name: Run kubectl apply
        run: |
          export PATH=/tmp/kubectl:${PATH}
          echo "::group::ZeroTier debugging"
          sudo zerotier-cli info
          sudo zerotier-cli peers
          sudo zerotier-cli listnetworks
          ping -c 5 k3s.home.ibidem.no
          echo "::endgroup::"
          echo "::group::Manifest debugging"
          cat deploy.yaml | grep -E 'kind|apiVersion'
          echo "::endgroup::"
          kubectl apply --namespace=default --context=k3s-home --filename=deploy.yaml --selector=app=homely-mqtt --prune=true --wait=true --timeout=60s
      - name: Leave ZeroTier network
        if: always()
        uses: mortenlj/zerotier-actions/leave-zt@main
        with:
          node_id: ${{ steps.join-zt.outputs.node_id }}
          network_id: ${{ secrets.ZEROTIER_NETWORK_ID }}
          api_accesstoken: ${{ secrets.ZEROTIER_API_ACCESSTOKEN }}
